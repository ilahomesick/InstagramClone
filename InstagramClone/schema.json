{
  "__schema": {
    "queryType": {
      "name": "Query"
    },
    "mutationType": {
      "name": "Mutation"
    },
    "subscriptionType": null,
    "types": [
      {
        "kind": "OBJECT",
        "name": "Query",
        "description": "Query is the top level type for queries.",
        "fields": [
          {
            "name": "role",
            "description": "The role query can be used to get an object of the Role class by its id.",
            "args": [
              {
                "name": "id",
                "description": "This is the object id.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "options",
                "description": "The read options for the query to be executed.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ReadOptionsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Role",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roles",
            "description": "The roles query can be used to find objects of the Role class.",
            "args": [
              {
                "name": "where",
                "description": "These are the conditions that the objects need to match in order to be found.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "RoleWhereInput",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "order",
                "description": "The fields to be used when sorting the data fetched.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RoleOrder",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "skip",
                "description": "This is the number of objects that must be skipped to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "limit",
                "description": "This is the limit number of objects that must be returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "options",
                "description": "The read options for the query to be executed.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ReadOptionsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "RoleFindResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "user",
            "description": "The user query can be used to get an object of the User class by its id.",
            "args": [
              {
                "name": "id",
                "description": "This is the object id.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "options",
                "description": "The read options for the query to be executed.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ReadOptionsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "users",
            "description": "The users query can be used to find objects of the User class.",
            "args": [
              {
                "name": "where",
                "description": "These are the conditions that the objects need to match in order to be found.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserWhereInput",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "order",
                "description": "The fields to be used when sorting the data fetched.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "UserOrder",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "skip",
                "description": "This is the number of objects that must be skipped to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "limit",
                "description": "This is the limit number of objects that must be returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "options",
                "description": "The read options for the query to be executed.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ReadOptionsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "UserFindResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "health",
            "description": "The health query can be used to check if the server is up and running.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "viewer",
            "description": "The viewer query can be used to return the current user data.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Viewer",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "class",
            "description": "The class query can be used to retrieve an existing object class.",
            "args": [
              {
                "name": "name",
                "description": "This is the name of the object class.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Class",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "classes",
            "description": "The classes query can be used to retrieve the existing object classes.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Class",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ReadOptionsInput",
        "description": "The ReadOptionsInputt type is used in queries in order to set the read preferences.",
        "fields": null,
        "inputFields": [
          {
            "name": "readPreference",
            "description": "The read preference for the main query to be executed.",
            "type": {
              "kind": "ENUM",
              "name": "ReadPreference",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "includeReadPreference",
            "description": "The read preference for the queries to be executed to include fields.",
            "type": {
              "kind": "ENUM",
              "name": "ReadPreference",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "subqueryReadPreference",
            "description": "The read preference for the subqueries that may be required.",
            "type": {
              "kind": "ENUM",
              "name": "ReadPreference",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ReadPreference",
        "description": "The ReadPreference enum type is used in queries in order to select in which database replica the operation must run.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "PRIMARY",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_PREFERRED",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SECONDARY",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SECONDARY_PREFERRED",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NEAREST",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Role",
        "description": "The Role object type is used in operations that involve outputting objects of Role class.",
        "fields": [
          {
            "name": "id",
            "description": "This is the object id.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": "This is the date in which the object was created.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": "This is the date in which the object was las updated.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "This is the object name.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "users",
            "description": "This is the object users.",
            "args": [
              {
                "name": "where",
                "description": "These are the conditions that the objects need to match in order to be found.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserWhereInput",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "order",
                "description": "The fields to be used when sorting the data fetched.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "UserOrder",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "skip",
                "description": "This is the number of objects that must be skipped to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "limit",
                "description": "This is the limit number of objects that must be returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "options",
                "description": "The read options for the query to be executed.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ReadOptionsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "UserFindResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roles",
            "description": "This is the object roles.",
            "args": [
              {
                "name": "where",
                "description": "These are the conditions that the objects need to match in order to be found.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "RoleWhereInput",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "order",
                "description": "The fields to be used when sorting the data fetched.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RoleOrder",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "skip",
                "description": "This is the number of objects that must be skipped to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "limit",
                "description": "This is the limit number of objects that must be returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "options",
                "description": "The read options for the query to be executed.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "ReadOptionsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "RoleFindResult",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "ParseObject",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "ParseObject",
        "description": "The ParseObject interface type is used as a base type for the auto generated object types.",
        "fields": [
          {
            "name": "id",
            "description": "This is the object id.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": "This is the date in which the object was created.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": "This is the date in which the object was las updated.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Role",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "User",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Viewer",
            "ofType": null
          }
        ]
      },
      {
        "kind": "SCALAR",
        "name": "Date",
        "description": "The Date scalar type is used in operations and types that involve dates.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Object",
        "description": "The Object scalar type is used in operations and types that involve objects.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UserWhereInput",
        "description": "The UserWhereInput input type is used in operations that involve filtering objects of User class.",
        "fields": null,
        "inputFields": [
          {
            "name": "createdAt",
            "description": "This is the object createdAt.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "DateWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": "This is the object updatedAt.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "DateWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "ACL",
            "description": "This is the object ACL.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "ObjectWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "username",
            "description": "This is the object username.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "password",
            "description": "This is the object password.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": "This is the object email.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": "This is the object emailVerified.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BooleanWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authData",
            "description": "This is the object authData.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "ObjectWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "This is the object id.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "OR",
            "description": "This is the OR operator to compound constraints.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserWhereInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "AND",
            "description": "This is the AND operator to compound constraints.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserWhereInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "NOR",
            "description": "This is the NOR operator to compound constraints.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserWhereInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DateWhereInput",
        "description": "The DateWhereInput input type is used in operations that involve filtering objects by a field of type Date.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SelectInput",
        "description": "The SelectInput type is used to specify an inQueryKey or a notInQueryKey operation on a constraint.",
        "fields": null,
        "inputFields": [
          {
            "name": "query",
            "description": "This is the subquery to be executed.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "SubqueryInput",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "key",
            "description": "This is the key in the result of the subquery that must match (not match) the field.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SubqueryInput",
        "description": "The SubqueryInput type is used to specify a sub query to another class.",
        "fields": null,
        "inputFields": [
          {
            "name": "className",
            "description": "This is the class name of the object.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "where",
            "description": "These are the conditions that the objects need to match in order to be found",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Object",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ObjectWhereInput",
        "description": "The ObjectWhereInput input type is used in operations that involve filtering result by a field of type Object.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "KeyValueInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "KeyValueInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "KeyValueInput",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "KeyValueInput",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "KeyValueInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "KeyValueInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "KeyValueInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "KeyValueInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "KeyValueInput",
        "description": "An entry from an object, i.e., a pair of key and value.",
        "fields": null,
        "inputFields": [
          {
            "name": "key",
            "description": "The key used to retrieve the value of this entry.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "value",
            "description": "The value of the entry. Could be any type of scalar data.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Any",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Any",
        "description": "The Any scalar type is used in operations and types that involve any type of value.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "StringWhereInput",
        "description": "The StringWhereInput input type is used in operations that involve filtering objects by a field of type String.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "matchesRegex",
            "description": "This is the matchesRegex operator to specify a constraint to select the\nobjects where the value of a field matches a specified regular expression.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "options",
            "description": "This is the options operator to specify optional flags (such as \"i\" and \"m\")\nto be added to a matchesRegex operation in the same set of constraints.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "text",
            "description": "This is the $text operator to specify a full text search constraint.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TextInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TextInput",
        "description": "The TextInput type is used to specify a text operation on a constraint.",
        "fields": null,
        "inputFields": [
          {
            "name": "search",
            "description": "This is the search to be executed.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "SearchInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SearchInput",
        "description": "The SearchInput type is used to specifiy a search operation on a full text search.",
        "fields": null,
        "inputFields": [
          {
            "name": "term",
            "description": "This is the term to be searched.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "language",
            "description": "This is the language to tetermine the list of stop words and the rules for tokenizer.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "caseSensitive",
            "description": "This is the flag to enable or disable case sensitive search.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "diacriticSensitive",
            "description": "This is the flag to enable or disable diacritic sensitive search.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BooleanWhereInput",
        "description": "The BooleanWhereInput input type is used in operations that involve filtering objects by a field of type Boolean.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "UserOrder",
        "description": "The UserOrder input type is used when sorting objects of the User class.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "createdAt_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "username_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "username_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "password_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "password_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "emailVerified_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "emailVerified_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authData_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authData_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UserFindResult",
        "description": "The UserFindResult object type is used in the User find query to return the data of the matched objects.",
        "fields": [
          {
            "name": "results",
            "description": "This is the objects returned by the query",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "User",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "count",
            "description": "This is the total matched objecs count that is returned when the count flag is set.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "User",
        "description": "The User object type is used in operations that involve outputting objects of User class.",
        "fields": [
          {
            "name": "id",
            "description": "This is the object id.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": "This is the date in which the object was created.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": "This is the date in which the object was las updated.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "username",
            "description": "This is the object username.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email",
            "description": "This is the object email.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "emailVerified",
            "description": "This is the object emailVerified.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authData",
            "description": "This is the object authData.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "ParseObject",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "RoleWhereInput",
        "description": "The RoleWhereInput input type is used in operations that involve filtering objects of Role class.",
        "fields": null,
        "inputFields": [
          {
            "name": "createdAt",
            "description": "This is the object createdAt.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "DateWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": "This is the object updatedAt.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "DateWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "ACL",
            "description": "This is the object ACL.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "ObjectWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "name",
            "description": "This is the object name.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "This is the object id.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringWhereInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "OR",
            "description": "This is the OR operator to compound constraints.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "RoleWhereInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "AND",
            "description": "This is the AND operator to compound constraints.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "RoleWhereInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "NOR",
            "description": "This is the NOR operator to compound constraints.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "RoleWhereInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RoleOrder",
        "description": "The RoleOrder input type is used when sorting objects of the Role class.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "createdAt_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "users_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "users_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roles_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roles_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RoleFindResult",
        "description": "The RoleFindResult object type is used in the Role find query to return the data of the matched objects.",
        "fields": [
          {
            "name": "results",
            "description": "This is the objects returned by the query",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Role",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "count",
            "description": "This is the total matched objecs count that is returned when the count flag is set.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Viewer",
        "description": "The Viewer object type is used in operations that involve outputting the current user data.",
        "fields": [
          {
            "name": "id",
            "description": "This is the object id.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": "This is the date in which the object was created.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": "This is the date in which the object was las updated.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Date",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "username",
            "description": "This is the object username.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email",
            "description": "This is the object email.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "emailVerified",
            "description": "This is the object emailVerified.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authData",
            "description": "This is the object authData.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sessionToken",
            "description": "The user session token",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "ParseObject",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Class",
        "description": "The Class type is used to return the information about an object class.",
        "fields": [
          {
            "name": "name",
            "description": "This is the name of the object class.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schemaFields",
            "description": "These are the schema's fields of the object class.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INTERFACE",
                    "name": "SchemaField",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "SchemaField",
        "description": "The SchemaField interface type is used as a base type for the different supported fields of an object class schema.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "SchemaACLField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaArrayField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaBooleanField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaBytesField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaDateField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaFileField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaGeoPointField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaNumberField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaObjectField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaPointerField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaPolygonField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaRelationField",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "SchemaStringField",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "Mutation",
        "description": "Mutation is the top level type for mutations.",
        "fields": [
          {
            "name": "createRole",
            "description": "The createRole mutation can be used to create a new object of the Role class.",
            "args": [
              {
                "name": "fields",
                "description": "These are the fields used to create the object.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "CreateRoleFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Role",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateRole",
            "description": "The updateRole mutation can be used to update an object of the Role class.",
            "args": [
              {
                "name": "id",
                "description": "This is the object id.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "fields",
                "description": "These are the fields used to update the object.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "UpdateRoleFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Role",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteRole",
            "description": "The deleteRole mutation can be used to delete an object of the Role class.",
            "args": [
              {
                "name": "id",
                "description": "This is the object id.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Role",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createUser",
            "description": "The createUser mutation can be used to create a new object of the User class.",
            "args": [
              {
                "name": "fields",
                "description": "These are the fields used to create the object.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "CreateUserFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateUser",
            "description": "The updateUser mutation can be used to update an object of the User class.",
            "args": [
              {
                "name": "id",
                "description": "This is the object id.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "fields",
                "description": "These are the fields used to update the object.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "UpdateUserFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteUser",
            "description": "The deleteUser mutation can be used to delete an object of the User class.",
            "args": [
              {
                "name": "id",
                "description": "This is the object id.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createFile",
            "description": "The create mutation can be used to create and upload a new file.",
            "args": [
              {
                "name": "upload",
                "description": "This is the new file to be created and uploaded",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Upload",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "FileInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "signUp",
            "description": "The signUp mutation can be used to sign the user up.",
            "args": [
              {
                "name": "fields",
                "description": null,
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "SignUpFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Viewer",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "logIn",
            "description": "The logIn mutation can be used to log the user in.",
            "args": [
              {
                "name": "fields",
                "description": "This is data needed to login",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "LogInFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Viewer",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "logOut",
            "description": "The logOut mutation can be used to log the user out.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Viewer",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createClass",
            "description": "The createClass mutation can be used to create the schema for a new object class.",
            "args": [
              {
                "name": "name",
                "description": "This is the name of the object class.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "schemaFields",
                "description": "These are the schema's fields of the object class.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Class",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateClass",
            "description": "The updateClass mutation can be used to update the schema for an existing object class.",
            "args": [
              {
                "name": "name",
                "description": "This is the name of the object class.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "schemaFields",
                "description": "These are the schema's fields of the object class.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaFieldsInput",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Class",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteClass",
            "description": "The deleteClass mutation can be used to delete an existing object class.",
            "args": [
              {
                "name": "name",
                "description": "This is the name of the object class.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Class",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateRoleFieldsInput",
        "description": "The CreateRoleFieldsInput input type is used in operations that involve creation of objects in the Role class.",
        "fields": null,
        "inputFields": [
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "name",
            "description": "This is the object name.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "users",
            "description": "This is the object users.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UserRelationInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "roles",
            "description": "This is the object roles.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "RoleRelationInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UserRelationInput",
        "description": "Allow to add, remove, createAndAdd objects of the User class into a relation field.",
        "fields": null,
        "inputFields": [
          {
            "name": "add",
            "description": "Add an existing object from the User class into the relation.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "remove",
            "description": "Remove an existing object from the User class out of the relation.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "createAndAdd",
            "description": "Create and add an object of the User class into the relation.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CreateUserFieldsInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateUserFieldsInput",
        "description": "The CreateUserFieldsInput input type is used in operations that involve creation of objects in the User class.",
        "fields": null,
        "inputFields": [
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "username",
            "description": "This is the object username.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "password",
            "description": "This is the object password.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": "This is the object email.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": "This is the object emailVerified.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authData",
            "description": "This is the object authData.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "RoleRelationInput",
        "description": "Allow to add, remove, createAndAdd objects of the Role class into a relation field.",
        "fields": null,
        "inputFields": [
          {
            "name": "add",
            "description": "Add an existing object from the Role class into the relation.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "remove",
            "description": "Remove an existing object from the Role class out of the relation.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "createAndAdd",
            "description": "Create and add an object of the Role class into the relation.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "CreateRoleFieldsInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateRoleFieldsInput",
        "description": "The UpdateRoleFieldsInput input type is used in operations that involve creation of objects in the Role class.",
        "fields": null,
        "inputFields": [
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "name",
            "description": "This is the object name.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "users",
            "description": "This is the object users.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UserRelationInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "roles",
            "description": "This is the object roles.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "RoleRelationInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateUserFieldsInput",
        "description": "The UpdateUserFieldsInput input type is used in operations that involve creation of objects in the User class.",
        "fields": null,
        "inputFields": [
          {
            "name": "ACL",
            "description": "This is the access control list of the object.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "username",
            "description": "This is the object username.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "password",
            "description": "This is the object password.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": "This is the object email.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": "This is the object emailVerified.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authData",
            "description": "This is the object authData.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Upload",
        "description": "The `Upload` scalar type represents a file upload.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "FileInfo",
        "description": "The FileInfo object type is used to return the information about files.",
        "fields": [
          {
            "name": "name",
            "description": "This is the file name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": "This is the url in which the file can be downloaded.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SignUpFieldsInput",
        "description": "The SignUpFieldsInput input type is used in operations that involve inputting objects of User class when signing up.",
        "fields": null,
        "inputFields": [
          {
            "name": "username",
            "description": "This is the object username.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "password",
            "description": "This is the object password.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": "This is the object email.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": "This is the object emailVerified.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authData",
            "description": "This is the object authData.",
            "type": {
              "kind": "SCALAR",
              "name": "Object",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "LogInFieldsInput",
        "description": "The LogInFieldsInput input type is used to login.",
        "fields": null,
        "inputFields": [
          {
            "name": "username",
            "description": "This is the username used to log the user in.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "password",
            "description": "This is the password used to log the user in.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaFieldsInput",
        "description": "The CreateClassSchemaInput type is used to specify the schema for a new object class to be created.",
        "fields": null,
        "inputFields": [
          {
            "name": "addStrings",
            "description": "These are the String fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaStringFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addNumbers",
            "description": "These are the Number fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaNumberFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addBooleans",
            "description": "These are the Boolean fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaBooleanFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addArrays",
            "description": "These are the Array fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaArrayFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addObjects",
            "description": "These are the Object fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaObjectFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addDates",
            "description": "These are the Date fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaDateFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addFiles",
            "description": "These are the File fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaFileFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addGeoPoint",
            "description": "This is the Geo Point field to be added to the class schema. Currently it is supported only one GeoPoint field per Class.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SchemaGeoPointFieldInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "addPolygons",
            "description": "These are the Polygon fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaPolygonFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addBytes",
            "description": "These are the Bytes fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaBytesFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addPointers",
            "description": "These are the Pointer fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PointerFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "addRelations",
            "description": "These are the Relation fields to be added to the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "RelationFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "remove",
            "description": "These are the fields to be removed from the class schema.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "SchemaFieldInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaStringFieldInput",
        "description": "The SchemaStringFieldInput is used to specify a field of type string for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaNumberFieldInput",
        "description": "The SchemaNumberFieldInput is used to specify a field of type number for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaBooleanFieldInput",
        "description": "The SchemaBooleanFieldInput is used to specify a field of type boolean for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaArrayFieldInput",
        "description": "The SchemaArrayFieldInput is used to specify a field of type array for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaObjectFieldInput",
        "description": "The SchemaObjectFieldInput is used to specify a field of type object for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaDateFieldInput",
        "description": "The SchemaDateFieldInput is used to specify a field of type date for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaFileFieldInput",
        "description": "The SchemaFileFieldInput is used to specify a field of type file for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaGeoPointFieldInput",
        "description": "The SchemaGeoPointFieldInput is used to specify a field of type geo point for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaPolygonFieldInput",
        "description": "The SchemaPolygonFieldInput is used to specify a field of type polygon for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaBytesFieldInput",
        "description": "The SchemaBytesFieldInput is used to specify a field of type bytes for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PointerFieldInput",
        "description": "The PointerFieldInput is used to specify a field of type pointer for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "targetClassName",
            "description": "This is the name of the target class for the field.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "RelationFieldInput",
        "description": "The RelationFieldInput is used to specify a field of type relation for an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "targetClassName",
            "description": "This is the name of the target class for the field.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "SchemaFieldInput",
        "description": "The SchemaFieldInput is used to specify a field of an object class schema.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "types",
            "description": "A list of all types supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "queryType",
            "description": "The type that query operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationType",
            "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "subscriptionType",
            "description": "If this server support subscription, the type that subscription operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directives",
            "description": "A list of all directives supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "fields": [
          {
            "name": "kind",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "__TypeKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Field",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interfaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possibleTypes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enumValues",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__EnumValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputFields",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ofType",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCALAR",
            "description": "Indicates this type is a scalar.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Indicates this type is an enum. `enumValues` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Indicates this type is an input object. `inputFields` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LIST",
            "description": "Indicates this type is a list. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NON_NULL",
            "description": "Indicates this type is a non-null. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultValue",
            "description": "A GraphQL-formatted string representing the default value for this input value.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__DirectiveLocation",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUERY",
            "description": "Location adjacent to a query operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MUTATION",
            "description": "Location adjacent to a mutation operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTION",
            "description": "Location adjacent to a subscription operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD",
            "description": "Location adjacent to a field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_DEFINITION",
            "description": "Location adjacent to a fragment definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_SPREAD",
            "description": "Location adjacent to a fragment spread.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INLINE_FRAGMENT",
            "description": "Location adjacent to an inline fragment.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "VARIABLE_DEFINITION",
            "description": "Location adjacent to a variable definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCHEMA",
            "description": "Location adjacent to a schema definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCALAR",
            "description": "Location adjacent to a scalar definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Location adjacent to an object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD_DEFINITION",
            "description": "Location adjacent to a field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ARGUMENT_DEFINITION",
            "description": "Location adjacent to an argument definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Location adjacent to an interface definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Location adjacent to a union definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Location adjacent to an enum definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM_VALUE",
            "description": "Location adjacent to an enum value definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Location adjacent to an input object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_FIELD_DEFINITION",
            "description": "Location adjacent to an input object field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "UNION",
        "name": "ArrayResult",
        "description": "Use Inline Fragment on Array to get results: https://graphql.org/learn/queries/#inline-fragments",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Element",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Role",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "User",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "Element",
        "description": "The Element object type is used to return array items' value.",
        "fields": [
          {
            "name": "value",
            "description": "Return the value of the element in the array",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Any",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "ArrayWhereInput",
        "description": "The ArrayWhereInput input type is used in operations that involve filtering objects by a field of type Array.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Any",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Any",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Any",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Any",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Any",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Any",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Any",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Any",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "containedBy",
            "description": "This is the containedBy operator to specify a constraint to select the objects\nwhere the values of an array field is contained by another specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Any",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "contains",
            "description": "This is the contains operator to specify a constraint to select the objects\nwhere the values of an array field contain all elements of another specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Any",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BoxInput",
        "description": "The BoxInput type is used to specifiy a box operation on a within geo query.",
        "fields": null,
        "inputFields": [
          {
            "name": "bottomLeft",
            "description": "This is the bottom left coordinates of the box.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "GeoPointInput",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "upperRight",
            "description": "This is the upper right coordinates of the box.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "GeoPointInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "GeoPointInput",
        "description": "The GeoPointInput type is used in operations that involve inputting fields of type geo point.",
        "fields": null,
        "inputFields": [
          {
            "name": "latitude",
            "description": "This is the latitude.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "longitude",
            "description": "This is the longitude.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Bytes",
        "description": "The Bytes scalar type is used in operations and types that involve base 64 binary data.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BytesWhereInput",
        "description": "The BytesWhereInput input type is used in operations that involve filtering objects by a field of type Bytes.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Bytes",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Bytes",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Bytes",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Bytes",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Bytes",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Bytes",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Bytes",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Bytes",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CenterSphereInput",
        "description": "The CenterSphereInput type is used to specifiy a centerSphere operation on a geoWithin query.",
        "fields": null,
        "inputFields": [
          {
            "name": "center",
            "description": "This is the center of the sphere.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "GeoPointInput",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "distance",
            "description": "This is the radius of the sphere.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "File",
        "description": "The File scalar type is used in operations and types that involve files.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "FileWhereInput",
        "description": "The FileWhereInput input type is used in operations that involve filtering objects by a field of type File.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "File",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "File",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "File",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "File",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "File",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "File",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "File",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "File",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "matchesRegex",
            "description": "This is the matchesRegex operator to specify a constraint to select the\nobjects where the value of a field matches a specified regular expression.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "options",
            "description": "This is the options operator to specify optional flags (such as \"i\" and \"m\")\nto be added to a matchesRegex operation in the same set of constraints.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "FindResult",
        "description": "The FindResult object type is used in the find queries to return the data of the matched objects.",
        "fields": [
          {
            "name": "results",
            "description": "This is the objects returned by the query",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Object",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "count",
            "description": "This is the total matched objecs count that is returned when the count flag is set.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "GeoIntersectsInput",
        "description": "The GeoIntersectsInput type is used to specify a geoIntersects operation on a constraint.",
        "fields": null,
        "inputFields": [
          {
            "name": "point",
            "description": "This is the point to be specified.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "GeoPointInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "GeoPoint",
        "description": "The GeoPoint object type is used to return the information about geo point fields.",
        "fields": [
          {
            "name": "latitude",
            "description": "This is the latitude.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": "This is the longitude.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "GeoPointWhereInput",
        "description": "The GeoPointWhereInput input type is used in operations that involve filtering objects by a field of type GeoPoint.",
        "fields": null,
        "inputFields": [
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "nearSphere",
            "description": "This is the nearSphere operator to specify a constraint to select the objects\nwhere the values of a geo point field is near to another geo point.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "GeoPointInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "maxDistance",
            "description": "This is the maxDistance operator to specify a constraint to select the objects\nwhere the values of a geo point field is at a max distance (in radians) from\nthe geo point specified in the $nearSphere operator.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "maxDistanceInRadians",
            "description": "This is the maxDistanceInRadians operator to specify a constraint to select\nthe objects where the values of a geo point field is at a max distance (in\nradians) from the geo point specified in the $nearSphere operator.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "maxDistanceInMiles",
            "description": "This is the maxDistanceInMiles operator to specify a constraint to select the\nobjects where the values of a geo point field is at a max distance (in miles)\nfrom the geo point specified in the $nearSphere operator.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "maxDistanceInKilometers",
            "description": "This is the maxDistanceInKilometers operator to specify a constraint to select\nthe objects where the values of a geo point field is at a max distance (in\nkilometers) from the geo point specified in the $nearSphere operator.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "within",
            "description": "This is the within operator to specify a constraint to select the objects\nwhere the values of a geo point field is within a specified box.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "WithinInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "geoWithin",
            "description": "This is the geoWithin operator to specify a constraint to select the objects\nwhere the values of a geo point field is within a specified polygon or sphere.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "GeoWithinInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "WithinInput",
        "description": "The WithinInput type is used to specify a within operation on a constraint.",
        "fields": null,
        "inputFields": [
          {
            "name": "box",
            "description": "This is the box to be specified.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "BoxInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "GeoWithinInput",
        "description": "The GeoWithinInput type is used to specify a geoWithin operation on a constraint.",
        "fields": null,
        "inputFields": [
          {
            "name": "polygon",
            "description": "This is the polygon to be specified.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "GeoPointInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "centerSphere",
            "description": "This is the sphere to be specified.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "CenterSphereInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "NumberWhereInput",
        "description": "The NumberWhereInput input type is used in operations that involve filtering objects by a field of type Number.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "This is the lessThan operator to specify a constraint to select the objects\nwhere the value of a field is less than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "This is the lessThanOrEqualTo operator to specify a constraint to select the\nobjects where the value of a field is less than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "This is the greaterThan operator to specify a constraint to select the objects\nwhere the value of a field is greater than a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "This is the greaterThanOrEqualTo operator to specify a constraint to select\nthe objects where the value of a field is greater than or equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PolygonWhereInput",
        "description": "The PolygonWhereInput input type is used in operations that involve filtering objects by a field of type Polygon.",
        "fields": null,
        "inputFields": [
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "geoIntersects",
            "description": "This is the geoIntersects operator to specify a constraint to select the\nobjects where the values of a polygon field intersect a specified point.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "GeoIntersectsInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "RolePointerInput",
        "description": "Allow to link OR add and link an object of the Role class.",
        "fields": null,
        "inputFields": [
          {
            "name": "link",
            "description": "Link an existing object from Role class.",
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createAndLink",
            "description": "Create and link an object from Role class.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "CreateRoleFieldsInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "RolePointerWhereInput",
        "description": "The RolePointerWhereInput input type is used in operations that involve filtering objects by a pointer field to Role class.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQuery",
            "description": "This is the inQuery operator to specify a constraint to select the objects\nwhere a field equals to any of the ids in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SubqueryInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQuery",
            "description": "This is the notInQuery operator to specify a constraint to select the objects\nwhere a field do not equal to any of the ids in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SubqueryInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaACLField",
        "description": "The SchemaACLField is used to return information of an ACL field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaArrayField",
        "description": "The SchemaArrayField is used to return information of an Array field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaBooleanField",
        "description": "The SchemaBooleanField is used to return information of a Boolean field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaBytesField",
        "description": "The SchemaBytesField is used to return information of a Bytes field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaDateField",
        "description": "The SchemaDateField is used to return information of a Date field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaFileField",
        "description": "The SchemaFileField is used to return information of a File field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaGeoPointField",
        "description": "The SchemaGeoPointField is used to return information of a Geo Point field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaNumberField",
        "description": "The SchemaNumberField is used to return information of a Number field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaObjectField",
        "description": "The SchemaObjectField is used to return information of an Object field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaPointerField",
        "description": "The SchemaPointerField is used to return information of a Pointer field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "targetClassName",
            "description": "This is the name of the target class for the field.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaPolygonField",
        "description": "The SchemaPolygonField is used to return information of a Polygon field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaRelationField",
        "description": "The SchemaRelationField is used to return information of a Relation field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "targetClassName",
            "description": "This is the name of the target class for the field.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "SchemaStringField",
        "description": "The SchemaStringField is used to return information of a String field.",
        "fields": [
          {
            "name": "name",
            "description": "This is the field name.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "SchemaField",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UserPointerInput",
        "description": "Allow to link OR add and link an object of the User class.",
        "fields": null,
        "inputFields": [
          {
            "name": "link",
            "description": "Link an existing object from User class.",
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createAndLink",
            "description": "Create and link an object from User class.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "CreateUserFieldsInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UserPointerWhereInput",
        "description": "The UserPointerWhereInput input type is used in operations that involve filtering objects by a pointer field to User class.",
        "fields": null,
        "inputFields": [
          {
            "name": "equalTo",
            "description": "This is the equalTo operator to specify a constraint to select the objects\nwhere the value of a field equals to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "This is the notEqualTo operator to specify a constraint to select the objects\nwhere the value of a field do not equal to a specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "This is the in operator to specify a constraint to select the objects where\nthe value of a field equals any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "This is the notIn operator to specify a constraint to select the objects where\nthe value of a field do not equal any value in the specified array.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "exists",
            "description": "This is the exists operator to specify a constraint to select the objects where a field exists (or do not exist).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQueryKey",
            "description": "This is the inQueryKey operator to specify a constraint to select the objects\nwhere a field equals to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQueryKey",
            "description": "This is the notInQueryKey operator to specify a constraint to select the\nobjects where a field do not equal to a key in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SelectInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "inQuery",
            "description": "This is the inQuery operator to specify a constraint to select the objects\nwhere a field equals to any of the ids in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SubqueryInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notInQuery",
            "description": "This is the notInQuery operator to specify a constraint to select the objects\nwhere a field do not equal to any of the ids in the result of a different query.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "SubqueryInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      }
    ],
    "directives": [
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "deprecated",
        "description": "Marks an element of a GraphQL schema as no longer supported.",
        "locations": [
          "FIELD_DEFINITION",
          "ENUM_VALUE"
        ],
        "args": [
          {
            "name": "reason",
            "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": "\"No longer supported\""
          }
        ]
      },
      {
        "name": "client",
        "description": "Direct the client to resolve this field locally, either from the cache or local resolvers.",
        "locations": [
          "FIELD",
          "FRAGMENT_DEFINITION",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "always",
            "description": "When true, the client will never use the cache for this value. See\nhttps://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "export",
        "description": "Export this locally resolved field as a variable to be used in the remainder of this query. See\nhttps://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables",
        "locations": [
          "FIELD"
        ],
        "args": [
          {
            "name": "as",
            "description": "The variable name to export this field as.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "connection",
        "description": "Specify a custom store key for this result. See\nhttps://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive",
        "locations": [
          "FIELD"
        ],
        "args": [
          {
            "name": "key",
            "description": "Specify the store key.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "filter",
            "description": "An array of query argument names to include in the generated custom store key.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ]
      }
    ]
  }
}